name: Build and Release Flutter App for Multiple Linux Architectures

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm, arm64, x64]
        cpu: [generic]
    steps:
    - uses: actions/checkout@v2

    - name: Setup Environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa

    - name: Install Flutter
      run: |
        git clone https://github.com/flutter/flutter.git -b stable $HOME/flutter
        echo "$HOME/flutter/bin" >> $GITHUB_PATH
        $HOME/flutter/bin/flutter doctor

    - name: Read pubspec.yaml and Setup Flutter Version
      run: |
        SDK_CONSTRAINT=$(grep 'sdk: ' "./pubspec.yaml" | awk '{print $2}' | head -1 | tr -d "'" | sed "s/>=//g")
        FLUTTER_VERSION=$(echo "$SDK_CONSTRAINT" | awk '{print $1}')
        echo "FLUTTER_VERSION=${FLUTTER_VERSION}" >> $GITHUB_ENV
        APP_VERSION=$(grep 'version: ' "./pubspec.yaml" | awk '{print $2}')
        echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
        flutter pub get

    - uses: actions/cache@v2
      with:
        path: |
          ~/.pub-cache
        key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-cache-

    - name: Install flutterpi_tool (Example)
      run: |
        flutter pub global activate flutterpi_tool
        echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

    - name: Build App Bundle (Example)
      run: |
        flutterpi_tool build --arch=${{ matrix.arch }} --cpu=${{ matrix.cpu }} --release

    - name: Archive release build
      run: tar -czvf hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release-build.tar.gz ./build/flutter_assets/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: ${{ env.APP_VERSION }}-${{ matrix.arch }}-${{ matrix.cpu }}
        release_name: Release ${{ env.APP_VERSION }} for ${{ matrix.arch }}-${{ matrix.cpu }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux-${{ matrix.arch }}-${{ matrix.cpu }}-release-build.tar.gz
        asset_name: linux-${{ matrix.arch }}-${{ matrix.cpu }}-release-build.tar.gz
        asset_content_type: application/gzip
