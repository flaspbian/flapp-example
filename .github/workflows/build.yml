name: Build and Release Flutter App for Multiple Linux Architectures

on:
  push:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa ninja-build libgtk-3-dev
      
      - name: Read pubspec.yaml and Setup Flutter Version
        id: app_version # Assign an id to this step
        run: |
          APP_VERSION=$(grep 'version: ' "./pubspec.yaml" | awk '{print $2}')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "::set-output name=APP_VERSION::$APP_VERSION" # Correctly set the output
                
    outputs:
      APP_VERSION: ${{ steps.app_version.outputs.APP_VERSION }}

  build-appbundle:
    needs: setup
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch: [arm, arm64, x64]
        cpu: [generic]
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - run: flutter --version

      # - name: Precache Flutter Engine and Artifacts
      #   run: flutter precache

      - uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Install flutterpi_tool
        run: |
          flutter pub global activate flutterpi_tool
          
      - name: Build App Bundle
        run: |
          ~/.pub-cache/bin/flutterpi_tool build --arch=${{ matrix.arch }} --cpu=${{ matrix.cpu }} --release --verbose

      - name: Archive release build
        run: tar -czvf hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz ./build/flutter_assets/

      - name: Upload Artifact to Workflow Run
        uses: actions/upload-artifact@v2
        with:
          name: hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release
          path: ./hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz

  build-native:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [apk]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - run: flutter --version

      - name: Build Apk
        run: |
          flutter build apk --release --verbose

      - name: Upload Artifact to Workflow Run
        uses: actions/upload-artifact@v2
        with:
          name: hallaos-${{ matrix.module }}-release
          path: ./build/app/outputs/flutter-apk/app-release.apk

  create-release:
    needs: [setup, build-appbundle, build-native]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/releases

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.APP_VERSION }}
          release_name: Release ${{ needs.build.outputs.APP_VERSION }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz
          asset_name: hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz
          asset_content_type: application/gzip