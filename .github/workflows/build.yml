name: Build and Release Flutter App for Multiple Linux Architectures

on:
  push:
    branches: [ main ]
    paths-ignore: ['pubspec.yaml']
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4


      - name: Setup Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa ninja-build libgtk-3-dev

      - name: Read pubspec.yaml and Setup Flutter Version
        id: app_version # Assign an id to this step
        run: |
          APP_VERSION=$(grep 'version: ' "./pubspec.yaml" | awk '{print $2}')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT

    outputs:
      APP_VERSION: ${{ steps.app_version.outputs.APP_VERSION }}

  build-appbundle:
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [arm, arm64, x64]
        cpu: [generic]
    outputs:
      ARCH: ${{ matrix.arch }}
      CPU: ${{ matrix.cpu }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable $HOME/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH

      - run: |
          flutter doctor
          flutter pub get

      - uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Install flutterpi_tool
        run: |
          flutter pub global activate flutterpi_tool
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
          
      - name: Build App Bundle
        run: |
          flutterpi_tool build --arch=${{ matrix.arch }} --cpu=${{ matrix.cpu }} --release

      - name: Archive release build
        run: tar -czvf hallaos-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz ./build/flutter_assets/

      - name: Upload Artifact to Workflow Run
        uses: actions/upload-artifact@v2
        with:
          name: hallaos-${{ needs.setup.outputs.APP_VERSION }}-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz
          path: ./hallaos-${{ needs.setup.outputs.APP_VERSION }}-${{ matrix.arch }}-${{ matrix.cpu }}-release.tar.gz

  build-native:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: [apk]
    outputs:
      MODULES: ${{ matrix.modules }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable $HOME/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
      
      - run: |
          flutter doctor
          flutter pub get

      - name: Build Apk
        run: |
          flutter build ${{ matrix.modules }} --release

      - name: Upload Artifact to Workflow Run
        uses: actions/upload-artifact@v2
        with:
          name: hallaos-${{ needs.setup.outputs.APP_VERSION }}-${{ matrix.modules }}-release.apk
          path: ./build/app/outputs/flutter-apk/app-release.apk

  create-release:
    needs: [setup, build-appbundle, build-native]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/releases

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ needs.setup.outputs.APP_VERSION }}
          release_name: Release ${{ needs.setup.outputs.APP_VERSION }}
          draft: false
          prerelease: false

        # Artifact hallaos-apk-release was downloaded to /home/runner/work/HallaOS/HallaOS/releases/hallaos-apk-release
        # Artifact hallaos-arm64-generic-release was downloaded to /home/runner/work/HallaOS/HallaOS/releases/hallaos-arm64-generic-release
        # Artifact hallaos-arm-generic-release was downloaded to /home/runner/work/HallaOS/HallaOS/releases/hallaos-arm-generic-release
        # Artifact hallaos-x64-generic-release was downloaded to /home/runner/work/HallaOS/HallaOS/releases/hallaos-x64-generic-release
      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      # - name: Upload release assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./*
      #     asset_content_type: [application/gzip, application/octet-stream]

      - name: Upload release assets
        run: |
          for file in releases/*; do
            if [[ -f "$file" ]]; then # Check if it is a file
              echo "Uploading $file..."
              gh release upload ${{ needs.setup.outputs.APP_VERSION }} "$file" --clobber
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}


